import React, { useState, useEffect, useRef } from 'react';
import PageLayout from '../components/PageLayout';
import '../styles/Chat.css';

const chatResponses = {
    'duvidas-gerais': {
        title: 'D√∫vidas Gerais',
        suggestions: [
            'Como funciona o ReVeste?',
            'Como posso trocar roupas?',
            '√â seguro usar a plataforma?',
            'Preciso pagar alguma taxa?'
        ],
        responses: {
            'Como funciona o ReVeste?': 'O ReVeste √© uma plataforma de troca de roupas! Voc√™ pode publicar pe√ßas que n√£o usa mais e trocar por outras que te interessam. √â sustent√°vel, econ√¥mico e voc√™ renova seu guarda-roupa sem gastar muito! üå±',
            'Como posso trocar roupas?': '√â simples: 1) Publique suas roupas com fotos e descri√ß√£o, 2) Navegue pelos an√∫ncios e encontre pe√ßas que te interessam, 3) Entre em contato com outros usu√°rios, 4) Combinem o local de encontro para a troca! üëï‚ÜîÔ∏èüëó',
            '√â seguro usar a plataforma?': 'Sim! Recomendamos sempre encontros em locais p√∫blicos e seguros. Voc√™ tamb√©m pode avaliar outros usu√°rios ap√≥s as trocas. Nossa comunidade preza pela seguran√ßa e respeito m√∫tuo! üõ°Ô∏è',
            'Preciso pagar alguma taxa?': 'N√£o! O ReVeste √© totalmente gratuito. Voc√™ s√≥ precisa se cadastrar e pode come√ßar a trocar suas roupas imediatamente. Nossa miss√£o √© promover a sustentabilidade de forma acess√≠vel! üíö'
        }
    },
    'publicar-anuncio': {
        title: 'Publicar An√∫ncio',
        suggestions: [
            'Como publico uma roupa?',
            'Que fotos devo tirar?',
            'Como escrevo uma boa descri√ß√£o?',
            'Posso editar meu an√∫ncio depois?'
        ],
        responses: {
            'Como publico uma roupa?': 'Clique em "Publicar Item" no menu superior, preencha as informa√ß√µes da pe√ßa (t√≠tulo, descri√ß√£o, categoria, tamanho, condi√ß√£o), adicione fotos e sua localiza√ß√£o. √â r√°pido e f√°cil! üì±',
            'Que fotos devo tirar?': 'Tire fotos bem iluminadas mostrando a pe√ßa completa, detalhes como estampas ou texturas, e poss√≠veis defeitos (se houver). Fotos claras aumentam as chances de troca! üì∏',
            'Como escrevo uma boa descri√ß√£o?': 'Seja honesto sobre o estado da pe√ßa, mencione a marca se for conhecida, descreva o estilo e ocasi√£o de uso. Quanto mais detalhes, melhor! Exemplo: "Vestido floral, usado 2x, perfeito para ver√£o" üìù',
            'Posso editar meu an√∫ncio depois?': 'Sim! V√° ao seu perfil, encontre o an√∫ncio e clique em "Editar". Voc√™ pode alterar informa√ß√µes, trocar fotos ou at√© excluir o an√∫ncio se n√£o quiser mais trocar a pe√ßa. ‚úèÔ∏è'
        }
    },
    'encontros-trocas': {
        title: 'Encontros e Trocas',
        suggestions: [
            'Onde posso fazer a troca?',
            'Como combinar um encontro?',
            'E se a roupa n√£o servir?',
            'Posso trocar v√°rias pe√ßas de uma vez?'
        ],
        responses: {
            'Onde posso fazer a troca?': 'Recomendamos locais p√∫blicos como shoppings, pra√ßas movimentadas, caf√©s ou esta√ß√µes de metr√¥. Sempre priorize sua seguran√ßa escolhendo lugares com movimento e boa ilumina√ß√£o! üè¢',
            'Como combinar um encontro?': 'Use nosso chat para conversar com a pessoa, definam local, data e hor√°rio. Confirmem os detalhes das pe√ßas que ser√£o trocadas e levem documentos. A comunica√ß√£o clara √© essencial! üí¨',
            'E se a roupa n√£o servir?': 'Por isso recomendamos verificar bem as medidas na descri√ß√£o! Se poss√≠vel, experimentem as pe√ßas no momento do encontro. Caso n√£o sirva, voc√™s podem combinar outras op√ß√µes ou cancelar a troca. üìè',
            'Posso trocar v√°rias pe√ßas de uma vez?': 'Claro! Muitos usu√°rios fazem "pacotes" de troca. Combinem quantas pe√ßas cada um levar√° e se ser√° 1x1 ou em quantidades diferentes. Flexibilidade √© importante! üëöüëñüëï'
        }
    },
    'perfil-conta': {
        title: 'Perfil e Conta',
        suggestions: [
            'Como edito meu perfil?',
            'Posso ver meus an√∫ncios ativos?',
            'Como excluo minha conta?',
            'Esqueci minha senha'
        ],
        responses: {
            'Como edito meu perfil?': 'Clique no seu nome/foto no canto superior direito e selecione "Perfil". L√° voc√™ pode alterar seus dados pessoais, foto e informa√ß√µes de contato. Mantenha sempre atualizado! üë§',
            'Posso ver meus an√∫ncios ativos?': 'Sim! No seu perfil voc√™ encontra todos os seus an√∫ncios publicados. Pode edit√°-los, paus√°-los ou exclu√≠-los quando quiser. √â seu painel de controle pessoal! üìã',
            'Como excluo minha conta?': 'No seu perfil, role at√© o final e clique em "Apagar conta". Aten√ß√£o: essa a√ß√£o √© irrevers√≠vel e todos seus an√∫ncios ser√£o removidos permanentemente! ‚ö†Ô∏è',
            'Esqueci minha senha': 'No momento, voc√™ pode criar uma nova conta ou tentar lembrar usando as informa√ß√µes que cadastrou. Estamos trabalhando numa funcionalidade de recupera√ß√£o de senha! üîë'
        }
    },
    'suporte': {
        title: 'Suporte',
        suggestions: [
            'Como reporto um problema?',
            'Encontrei um usu√°rio suspeito',
            'Tive problemas numa troca',
            'Sugest√µes para melhorar'
        ],
        responses: {
            'Como reporto um problema?': 'Entre em contato conosco atrav√©s do chat ou email reveste@contato.com. Descreva o problema detalhadamente e nossa equipe responder√° em at√© 24h! üìß',
            'Encontrei um usu√°rio suspeito': 'Sua seguran√ßa √© prioridade! Nos informe imediatamente sobre comportamentos inadequados. Evite encontros com pessoas que parecem suspeitas e sempre priorize locais p√∫blicos. üö®',
            'Tive problemas numa troca': 'Lamentamos que isso tenha acontecido. Entre em contato conosco relatando o ocorrido. Podemos mediar conflitos e, se necess√°rio, tomar medidas contra usu√°rios problem√°ticos. ü§ù',
            'Sugest√µes para melhorar': 'Adoramos feedback! Nos conte suas ideias para melhorar o ReVeste. Estamos sempre evoluindo para oferecer a melhor experi√™ncia de troca de roupas sustent√°vel! üí°'
        }
    }
};

// Fun√ß√£o para gerar mensagens de boas-vindas baseadas na categoria
const getWelcomeMessages = (categoryId) => {
    const categoryTitle = chatResponses[categoryId].title;
    const currentTime = new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
    
    return [
        {
            id: Date.now(),
            text: `Ol√°! Bem-vindo √† se√ß√£o "${categoryTitle}" do ReVeste! üëã`,
            sender: 'bot',
            time: currentTime
        },
        {
            id: Date.now() + 1,
            text: 'Escolha uma das perguntas sugeridas abaixo ou me diga como posso ajudar voc√™! üòä',
            sender: 'bot',
            time: currentTime
        }
    ];
};

const Chat = () => {
    const [activeCategory, setActiveCategory] = useState('duvidas-gerais');
    const [messages, setMessages] = useState(() => getWelcomeMessages('duvidas-gerais'));
    const [isTyping, setIsTyping] = useState(false);
    const messagesEndRef = useRef(null);

    const scrollToBottom = () => {
        messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
    };

    useEffect(() => {
        scrollToBottom();
    }, [messages, isTyping]);

    const simulateTyping = (callback) => {
        setIsTyping(true);
        setTimeout(() => {
            setIsTyping(false);
            callback();
        }, 1500);
    };

    const handleSuggestionClick = (suggestion) => {
        const userMessage = {
            id: Date.now(),
            text: suggestion,
            sender: 'user',
            time: new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })
        };
        
        setMessages(prev => [...prev, userMessage]);

        simulateTyping(() => {
            const response = chatResponses[activeCategory].responses[suggestion];
            if (response) {
                const botMessage = {
                    id: Date.now() + 1,
                    text: response,
                    sender: 'bot',
                    time: new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })
                };
                setMessages(prev => [...prev, botMessage]);
            }
        });
    };

    const handleCategoryChange = (categoryId) => {
        // S√≥ muda se for uma categoria diferente da atual
        if (categoryId !== activeCategory) {
            setActiveCategory(categoryId);
            
            // LIMPA O CHAT e adiciona mensagens de boas-vindas da nova categoria
            const welcomeMessages = getWelcomeMessages(categoryId);
            setMessages(welcomeMessages);
            
            // Para a anima√ß√£o de digitando se estiver ativa
            setIsTyping(false);
        }
    };

    return (
        <PageLayout 
            title="Chat de Ajuda" 
            subtitle={`Se√ß√£o: ${chatResponses[activeCategory].title}`}
            className="chat-page"
        >
            <div className="chat-content">
                <div className="chat-categories">
                    <h3>Categorias de Ajuda</h3>
                    <div className="category-buttons">
                        {Object.entries(chatResponses).map(([key, category]) => (
                            <button
                                key={key}
                                className={`category-btn ${activeCategory === key ? 'active' : ''}`}
                                onClick={() => handleCategoryChange(key)}
                            >
                                {category.title}
                            </button>
                        ))}
                    </div>
                </div>

                <div className="chat-messages">
                    {messages.map((message) => (
                        <div key={message.id} className={`message ${message.sender}`}>
                            {message.text}
                            <span className="message-time">{message.time}</span>
                        </div>
                    ))}
                    {isTyping && (
                        <div className="typing-indicator">
                            <span className="typing-dot"></span>
                            <span className="typing-dot"></span>
                            <span className="typing-dot"></span>
                        </div>
                    )}
                    <div ref={messagesEndRef} />
                </div>

                <div className="chat-suggestions">
                    <div className="suggestions-title">Perguntas sugeridas para {chatResponses[activeCategory].title}:</div>
                    <div className="suggestions-buttons">
                        {chatResponses[activeCategory].suggestions.map((suggestion, index) => (
                            <button
                                key={index}
                                className="suggestion-btn"
                                onClick={() => handleSuggestionClick(suggestion)}
                            >
                                {suggestion}
                            </button>
                        ))}
                    </div>
                </div>
            </div>
        </PageLayout>
    );
};

export default Chat;